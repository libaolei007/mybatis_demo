<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lbl.mybatis.mapper.UserMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="user">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="username" column="username" javaType="java.lang.String"></result>
        <result property="password" column="password" javaType="java.lang.String"></result>
        <result property="account" column="account" javaType="java.lang.Double"></result>
    </resultMap>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。
    parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性，
    MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null and username !=''">
                username,
            </if>
            <if test="password != null and password !=''">
                password,
            </if>
            <if test="account != null and account !=''">
                account,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null and username !=''">
                #{username},
            </if>
            <if test="password != null and password !=''">
                #{password},
            </if>
            <if test="account != null and account !=''">
                #{account},
            </if>
        </trim>
    </insert>



    <insert id="insertUsers" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        insert into user (username,password,account) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.username},
            #{item.password},
            #{item.account}
            )
        </foreach>
    </insert>

    <update id="updateUser">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="username != null and username !=''">
                username = #{username},
            </if>
            <if test="password != null and password !=''">
                password = #{password},
            </if>
            <if test="account != null and account !=''">
                account = #{account},
            </if>
        </trim>
        WHERE id=#{id}
    </update>


<update id="updateUsers" parameterType="java.util.List">
    update user
    <trim prefix="set" suffixOverrides=",">
        <trim prefix="username = case" suffix="end,">
            <foreach collection="list" item="item">
                <if test="item.username != null and item.username != ''">
                    when id = #{item.id} then #{item.username}
                </if>
            </foreach>
        </trim>
        <trim prefix="password=case" suffix="end,">
            <foreach collection="list" item="item">
                <if test="item.password != null and item.password != ''">
                    when id = #{item.id} then #{item.username}
                </if>
            </foreach>
        </trim>
        <trim prefix="account=case" suffix="end,">
            <foreach collection="list" item="item">
                <if test="item.account != null and item.account != ''">
                    when id = #{item.id} then #{item.account}
                </if>
            </foreach>
        </trim>
    </trim>
    where
    <foreach collection="list" index="index" item="item"  separator="or">
        id = #{item.id}
    </foreach>

</update>

    <update id="updateUserSet">
        update user
        <set>
            <if test="username != null and username !=''">username = #{username},</if>
            <if test="password != null and password !=''">password = #{password},</if>
            <if test="account != null and account !=''">account = #{account},</if>
        </set>
        where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>


    <delete id="deleteBatch" parameterType="java.util.List">
        delete from user
        where id in
        <foreach item="id" collection="list" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>





    <select id="selectUserById" parameterType="int" resultMap="userMap">
        select * from user where id=#{id}
    </select>

    <select id="selectAllUser" resultMap="userMap">
        select * from user
    </select>

    <select id="getUserByIds" parameterType="java.util.List" resultMap="userMap">
        select * from user where id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
    </select>

</mapper>